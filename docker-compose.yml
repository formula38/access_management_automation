version: '3.8'

services:
  # Main FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/access_management
      - REDIS_URL=redis://redis:6379
      - OLLAMA_BASE_URL=http://ollama:11434
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_SERVICE_ACCOUNT_PATH=/app/credentials/service-account.json
    volumes:
      - ./app:/app/app
      - ./credentials:/app/credentials:ro
      - ./chroma_db:/app/chroma_db
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - access-management-network

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - app
    networks:
      - access-management-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=access_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - access-management-network

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - access-management-network

  # Ollama for Local LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    command: ["ollama", "pull", "llama3"]
    networks:
      - access-management-network

  # ChromaDB for Vector Storage
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    networks:
      - access-management-network

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  chroma_data:

networks:
  access-management-network:
    driver: bridge 